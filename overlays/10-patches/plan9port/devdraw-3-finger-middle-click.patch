From 449082367758b926649a0dc810b2b32775d7d12a Mon Sep 17 00:00:00 2001
From: "Yestin L. Harrison" <yestin@ylh.io>
Date: Thu, 16 Jun 2022 18:04:12 -0700
Subject: [PATCH] devdraw/mac_screen.m: 3-finger middle click (takes precedence
 over tap)

---
 src/cmd/devdraw/mac-screen.m | 70 ++++++++++++++++++++++++++++++++++--
 1 file changed, 68 insertions(+), 2 deletions(-)

diff --git a/src/cmd/devdraw/mac-screen.m b/src/cmd/devdraw/mac-screen.m
index 9e51eec6..519478be 100644
--- a/src/cmd/devdraw/mac-screen.m
+++ b/src/cmd/devdraw/mac-screen.m
@@ -14,6 +14,7 @@
 #include <libc.h>
 #include <thread.h>
 #include <draw.h>
+#include <math.h>
 #include <memdraw.h>
 #include <memlayer.h>
 #include <mouse.h>
@@ -180,6 +181,7 @@ rpc_shutdown(void)
 - (void)setcursor:(Cursor*)c cursor2:(Cursor2*)c2;
 - (void)setmouse:(Point)p;
 - (void)clearInput;
+- (void)updateFingers:(NSEvent*)e;
 - (void)getmouse:(NSEvent*)e;
 - (void)sendmouse:(NSUInteger)b;
 - (void)resetLastInputRect;
@@ -193,6 +195,8 @@ rpc_shutdown(void)
 	NSRange _selectedRange;
 	NSRect _lastInputRect;	// The view is flipped, this is not.
 	BOOL _tapping;
+	BOOL _simMiddle;
+	NSUInteger _clickFingers;
 	NSUInteger _tapFingers;
 	NSUInteger _tapTime;
 }
@@ -650,10 +654,60 @@ rpc_resizewindow(Client *c, Rectangle r)
 		[[self window] toggleFullScreen:nil];
 }
 
+/* macos handily palm-rejects 1 and 2 finger clicks; we're on our own for 3+.
+   naive clustering against O(n^2) average distance is fine since n is small */
+- (void)updateFingers:(NSEvent*)e
+{
+	int assign[10], card[10], amask, i, j, nt, cid, newcid, max, maxtmp;
+	CGPoint ps[10];
+	NSSet<NSTouch *> *ts;
+	NSTouch *t;
+	float avg, dists[45 /* 10 choose 2 */], *dp;
+
+	ts = [e touchesMatchingPhase:NSTouchPhaseTouching inView:nil];
+
+	if(ts.count > 10 || ts.count <= 2){
+		_clickFingers = ts.count;
+		return;
+	}
+
+	nt = 0;
+	for(t in ts){
+		card[nt] = assign[nt] = 0;
+		ps[nt++] = t.normalizedPosition;
+	}
+
+	for(i=0, dp=dists, avg=0.0; i<nt; i++)
+		for(j=i+1; j<nt; j++)
+			avg += *dp++ = hypot(ps[i].x - ps[j].x, ps[i].y - ps[j].y);
+	avg /= (nt * (nt - 1))/2;
+
+	for(i=0, dp=dists, max=newcid=1; i<nt; i++)
+		for(j=i+1; j<nt; j++){
+			goto *(void *[]){&&l0, &&l1, &&l2, &&l3}[
+				amask = (!assign[j] | !assign[i] << 1) & -(*dp++ < avg)
+			];
+		l3:
+			assign[j] = newcid++;
+		l2:
+			cid = assign[i] = assign[j];
+			goto apply;
+		l1:
+			cid = assign[j] = assign[i];
+		apply:
+			if ((maxtmp = card[cid - 1] += __builtin_popcount(amask)) > max)
+				max = maxtmp;
+		l0:
+			;
+		}
+	_clickFingers = max;
+}
+
 - (void)touchesBeganWithEvent:(NSEvent*)e
 {
 	_tapping = YES;
-	_tapFingers = [e touchesMatchingPhase:NSTouchPhaseTouching inView:nil].count;
+	[self updateFingers:e];
+	_tapFingers = _clickFingers;
 	_tapTime = msec();
 }
 - (void)touchesMovedWithEvent:(NSEvent*)e
@@ -662,8 +716,9 @@ rpc_resizewindow(Client *c, Rectangle r)
 }
 - (void)touchesEndedWithEvent:(NSEvent*)e
 {
+	[self updateFingers:e];
 	if(_tapping
-		&& [e touchesMatchingPhase:NSTouchPhaseTouching inView:nil].count == 0
+		&& _clickFingers == 0
 		&& msec() - _tapTime < 250){
 		switch(_tapFingers){
 		case 3:
@@ -682,6 +737,7 @@ rpc_resizewindow(Client *c, Rectangle r)
 - (void)touchesCancelledWithEvent:(NSEvent*)e
 {
 	_tapping = NO;
+	_tapFingers = _clickFingers = 0;
 }
 
 - (void)getmouse:(NSEvent *)e
@@ -702,6 +758,16 @@ rpc_resizewindow(Client *c, Rectangle r)
 		if(m & NSEventModifierFlagCommand)
 			b = 4;
 	}
+	if(b && _clickFingers == 3){
+		_tapping = NO;
+		_simMiddle = YES;
+	}
+	if(_simMiddle){
+		if(b)
+			b = 2;
+		else
+			_simMiddle = NO;
+	}
 	[self sendmouse:b];
 }
 
-- 
2.36.1

